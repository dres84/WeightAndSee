buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        //noinspection AndroidGradlePluginVersion
        classpath 'com.android.tools.build:gradle:8.8.0'
    }
}

repositories {
    google()
    mavenCentral()
}

apply plugin: qtGradlePluginType

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    //noinspection GradleDependency
    implementation 'androidx.core:core:1.13.1'
}

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qtAndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     * - qtGradlePluginType - whether to build an app or a library
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    # Nombre del paquete Android (DEBE coincidir con tu AndroidManifest.xml)
    androidPackageName=com.dreSoft.weightAndSee

    # Versión de herramientas de build (ajusta según tus necesidades)
    androidBuildToolsVersion=34.0.0
    androidCompileSdkVersion=34
    qtMinSdkVersion=23
    qtTargetSdkVersion=34

    sourceSets {
        main {
            // Forzar el uso de nuestro manifiesto
            manifest.srcFile 'src/main/AndroidManifest.xml'
            // Asegurar que los recursos se tomen de nuestra estructura
            res.srcDirs = ['src/main/res']
        }
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    // Do not compress Qt binary resources file
    aaptOptions {
        noCompress 'rcc'
    }

    defaultConfig {
        resConfig "en"
        minSdkVersion qtMinSdkVersion
        targetSdkVersion qtTargetSdkVersion
        ndk.abiFilters = qtTargetAbiList.split(",")
    }
}
